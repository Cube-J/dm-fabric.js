// import { ease } from './anim_ease';
import * as anim_ease from './anim_ease.js';
import { animateColor } from './animate_color.js';
import { animate, requestAnimFrame, cancelAnimFrame, runningAnimations } from './animate.js';
import { addListener, removeListener, getPointer, isTouchEvent } from './dom_event.js';
import { setImageSmoothing, getById, toArray, addClass, makeElement, wrapElement, getScrollLeftTop, getElementOffset, cleanUpJsdomNode, makeElementUnselectable, makeElementSelectable } from './dom_misc.js';
// import * as dom_misc from './dom_misc';
import { request } from './dom_request.js';
import { setStyle } from './dom_style.js';
import { array } from './lang_array.js';
import { createClass } from './lang_class.js';
import { object } from './lang_object.js';
import { string } from './lang_string.js';
import { cos,
  sin,
  removeFromArray,
  getRandomInt,
  degreesToRadians,
  radiansToDegrees,
  rotatePoint,
  rotateVector,
  createVector,
  calcAngleBetweenVectors,
  getHatVector,
  getBisector,
  projectStrokeOnPoints,
  transformPoint,
  sendPointToPlane,
  transformPointRelativeToCanvas,
  makeBoundingBoxFromPoints,
  invertTransform,
  toFixed,
  parseUnit,
  falseFunction,
  getKlass,
  getSvgAttributes,
  resolveNamespace,
  loadImage,
  enlivenObjects,
  enlivenObjectEnlivables,
  groupSVGElements,
  populateWithProperties,
  createCanvasElement,
  copyCanvasElement,
  toDataURL,
  createImage,
  multiplyTransformMatrices,
  qrDecompose,
  calcRotateMatrix,
  calcDimensionsMatrix,
  composeMatrix,
  resetObjectTransform,
  saveObjectTransform,
  isTransparent,
  parsePreserveAspectRatioAttribute,
  clearFabricFontCache,
  limitDimsByArea,
  capValue,
  findScaleToFit,
  findScaleToCover,
  matrixToSVG,
  removeTransformFromObject,
  addTransformToObject,
  applyTransformToObject,
  sendObjectToPlane,
  sizeAfterTransform,
  mergeClipPaths, } from './misc.js';
import { createAccessors } from './named_accessors.mixin.js'
import { joinPath,
  parsePath,
  makePathSimpler,
  getSmoothPathFromPoints,
  getPathSegmentsInfo,
  getBoundsOfCurve,
  getPointOnPath,
  transformPath,
  getRegularPolygonPath } from './path.js'
import { Observable } from '../mixins/observable.mixin.js';

const util = {
  // ease,
  ...anim_ease,
  animateColor,
  animate,
  requestAnimFrame,
  cancelAnimFrame,
  addListener,
  removeListener,
  getPointer,
  isTouchEvent,
  setImageSmoothing,
  getById,
  toArray,
  addClass,
  makeElement,
  wrapElement,
  getScrollLeftTop,
  getElementOffset,
  cleanUpJsdomNode,
  makeElementUnselectable,
  makeElementSelectable,
  request,
  setStyle,
  array,
  createClass,
  object,
  string,
  cos,
  sin,
  removeFromArray,
  getRandomInt,
  degreesToRadians,
  radiansToDegrees,
  rotatePoint,
  rotateVector,
  createVector,
  calcAngleBetweenVectors,
  getHatVector,
  getBisector,
  projectStrokeOnPoints,
  transformPoint,
  sendPointToPlane,
  transformPointRelativeToCanvas,
  makeBoundingBoxFromPoints,
  invertTransform,
  toFixed,
  parseUnit,
  falseFunction,
  getKlass,
  getSvgAttributes,
  resolveNamespace,
  loadImage,
  enlivenObjects,
  enlivenObjectEnlivables,
  groupSVGElements,
  populateWithProperties,
  createCanvasElement,
  copyCanvasElement,
  toDataURL,
  createImage,
  multiplyTransformMatrices,
  qrDecompose,
  calcRotateMatrix,
  calcDimensionsMatrix,
  composeMatrix,
  resetObjectTransform,
  saveObjectTransform,
  isTransparent,
  parsePreserveAspectRatioAttribute,
  clearFabricFontCache,
  limitDimsByArea,
  capValue,
  findScaleToFit,
  findScaleToCover,
  matrixToSVG,
  removeTransformFromObject,
  addTransformToObject,
  applyTransformToObject,
  sendObjectToPlane,
  sizeAfterTransform,
  mergeClipPaths,
  createAccessors,
  joinPath,
  parsePath,
  makePathSimpler,
  getSmoothPathFromPoints,
  getPathSegmentsInfo,
  getBoundsOfCurve,
  getPointOnPath,
  transformPath,
  getRegularPolygonPath
}

object.extend(util, Observable);

export { 
  util,
  runningAnimations 
};